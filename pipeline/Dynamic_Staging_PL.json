{
	"name": "Dynamic_Staging_PL",
	"properties": {
		"activities": [
			{
				"name": "Lookup_Table_Name",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.10:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT t.name as table_name, s.name as schema_name\nFROM sys.tables t join sys.schemas s\nON t.schema_id = s.schema_id\nWHERE type = 'U'\nAND s.name = '@{pipeline().parameters.s_name}';",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDB_Demo_DS",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "customer"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachTable",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup_Table_Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_Table_Name').output.value",
						"type": "Expression"
					},
					"batchCount": 10,
					"activities": [
						{
							"name": "SourceTable2Parquet",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.10:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzureSqlDB_Demo_DS",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": {
											"value": "@item().schema_name",
											"type": "Expression"
										},
										"table_name": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_Parquet_Staging",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@concat(\n    item().table_name,'.parquet'\n)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Parquet_2_Stage_Table",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SourceTable2Parquet",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"additionalColumns": [
										{
											"name": "DI_Job_ID",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										{
											"name": "DI_Created_Dt",
											"value": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"importSettings": {
										"type": "SnowflakeImportCopyCommand"
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "ls_stgblobdamg7370agash",
										"type": "LinkedServiceReference"
									},
									"path": "snowstaging"
								}
							},
							"inputs": [
								{
									"referenceName": "ds_reaD_parquet",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_snowflake_stg_dynamic",
									"type": "DatasetReference",
									"parameters": {
										"table_name_snowflake": "@item().table_name"
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"s_name": {
				"type": "string",
				"defaultValue": "dbo"
			}
		},
		"variables": {
			"tablename": {
				"type": "String"
			}
		},
		"annotations": []
	}
}