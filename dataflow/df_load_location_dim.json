{
	"name": "df_load_location_dim",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_geodata",
						"type": "DatasetReference"
					},
					"name": "sourcesnowflakestage"
				},
				{
					"dataset": {
						"referenceName": "sourceLocationDim",
						"type": "DatasetReference"
					},
					"name": "sourceLocationDim",
					"description": "Import data from ds_geodata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sourceLocationDim",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SourceDataWithSK"
				},
				{
					"name": "surrogateKey"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          state_fips as short,",
				"          state as string,",
				"          state_abbr as string,",
				"          zipcode as string,",
				"          county as string,",
				"          city as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcesnowflakestage",
				"source(output(",
				"          MAXLOCATIONSK as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(LOCATION_SK),0) as MaxLOCATIONSK FROM EDW.LOCATION_DIM',",
				"     format: 'query') ~> sourceLocationDim",
				"sourcesnowflakestage, sourceLocationDim join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SourceDataWithSK",
				"SourceDataWithSK keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey",
				"surrogateKey derive(LOCATION_SK = MAXLOCATIONSK +RowNum,",
				"          DI_CREATED_DT = toString(currentDate(),'yyyy-MM-dd'),",
				"          DI_JOB_ID = $DI_JOB_ID) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          LOCATION_SK as string,",
				"          ZIP as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          DATE_TO_WAREHOUSE as string,",
				"          DI_JOBID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          LOCATION_SK,",
				"          ZIP = zipcode,",
				"          CITY = city,",
				"          STATE = state,",
				"          DATE_TO_WAREHOUSE = DI_CREATED_DT,",
				"          DI_JOBID = DI_JOB_ID",
				"     )) ~> sink1"
			]
		}
	}
}